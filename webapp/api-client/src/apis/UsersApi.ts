/* tslint:disable */
/* eslint-disable */
/**
 * HabitMuse API
 * API для управления привычками и пользователями
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  UsersUser,
} from '../models/index';
import {
    UsersUserFromJSON,
    UsersUserToJSON,
} from '../models/index';

/**
 * UsersApi - interface
 * 
 * @export
 * @interface UsersApiInterface
 */
export interface UsersApiInterface {
    /**
     * 
     * @summary Получить Пользователя из контекста
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApiInterface
     */
    apiUserGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UsersUser>>;

    /**
     * Получить Пользователя из контекста
     */
    apiUserGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UsersUser>;

}

/**
 * 
 */
export class UsersApi extends runtime.BaseAPI implements UsersApiInterface {

    /**
     * Получить Пользователя из контекста
     */
    async apiUserGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UsersUser>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/user/`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UsersUserFromJSON(jsonValue));
    }

    /**
     * Получить Пользователя из контекста
     */
    async apiUserGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UsersUser> {
        const response = await this.apiUserGetRaw(initOverrides);
        return await response.value();
    }

}
