// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/body-metric": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BodyMetrics"
                ],
                "summary": "Получить отчет по метрикам тела",
                "responses": {
                    "200": {
                        "description": "Готовый текстовый отчет",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/body-metric/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BodyMetrics"
                ],
                "summary": "Создать метрику тела",
                "parameters": [
                    {
                        "description": "Данные метрики",
                        "name": "metric",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body_metrics.BodyMetricDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/body_metrics.BodyMetricDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/habit/": {
            "get": {
                "description": "Returns all active habits for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "habits"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/habits.HabitDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/habit/completion/{date}": {
            "get": {
                "description": "Returns all completed or active habits for a user on a given date",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "habits"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date in format YYYY-MM-DD",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/habits.HabitCompletionDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/habit/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "habits"
                ],
                "summary": "Создать новую привычку",
                "parameters": [
                    {
                        "description": "HabitDto",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/habits.HabitDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/habits.HabitDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/habit/update/{groupId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "habits"
                ],
                "summary": "Обновить привычку",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID группы привычки",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HabitDto",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/habits.HabitDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/habits.HabitDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/habit/{groupId}": {
            "get": {
                "description": "Returns a single active habit by group ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "habits"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Habit group ID",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/habits.HabitDto"
                        }
                    }
                }
            }
        },
        "/api/habit/{versionId}/{date}": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "habits"
                ],
                "summary": "Отметить выполнение привычки на дату",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID версии привычки",
                        "name": "versionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Дата (в формате 2006-01-02)",
                        "name": "date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Completion status",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/habits.CompletionRequest"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Получить Пользователя из контекста",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.User"
                        }
                    }
                }
            }
        },
        "/body-metric/all": {
            "get": {
                "description": "Возвращает список всех записей метрик тела текущего авторизованного пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "body-metric"
                ],
                "summary": "Получить список всех метрик тела пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body_metrics.BodyMetricDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не найден в контексте",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "body_metrics.BodyMetricDTO": {
            "type": "object",
            "required": [
                "date"
            ],
            "properties": {
                "belly": {
                    "type": "number"
                },
                "biceps_left": {
                    "type": "number"
                },
                "biceps_right": {
                    "type": "number"
                },
                "chest": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "hips": {
                    "type": "number"
                },
                "thigh_low_left": {
                    "type": "number"
                },
                "thigh_low_right": {
                    "type": "number"
                },
                "thigh_max_left": {
                    "type": "number"
                },
                "thigh_max_right": {
                    "type": "number"
                },
                "waist": {
                    "type": "number"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "habits.CompletionRequest": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                }
            }
        },
        "habits.HabitCompletionDto": {
            "type": "object",
            "required": [
                "completed",
                "completedDay",
                "habit"
            ],
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "completedDay": {
                    "type": "string",
                    "format": "2006-01-02"
                },
                "habit": {
                    "$ref": "#/definitions/habits.HabitDto"
                }
            }
        },
        "habits.HabitDto": {
            "type": "object",
            "required": [
                "color",
                "daysOfWeek",
                "desc",
                "firstDate",
                "icon",
                "id",
                "name",
                "repeatType",
                "versionId"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "daysOfWeek": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "firstDate": {
                    "description": "\"2025-06-28T00:00:00Z\"",
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "repeatType": {
                    "type": "string"
                },
                "versionId": {
                    "type": "integer"
                }
            }
        },
        "users.User": {
            "type": "object",
            "properties": {
                "createAt": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "HabitMuse API",
	Description:      "API для управления привычками и пользователями",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
