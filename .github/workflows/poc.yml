name: poc.yml
on:
  push:
    branches:
      - 'poc'
      - 'poc/**'

jobs:
  deploy:
    environment: poc
    env:
      TARGET_DIR: PoCApp2
    runs-on: ubuntu-latest
    steps:
      - name: Generate some files
        run: |
          echo 'Executable' > executable
          chmod +x ./executable
          mkdir static
          echo 'Static' > ./static/index.html
      - name: Create .env
        env:
          SECRETS: ${{ toJson(secrets) }}
        run: |
          echo "$SECRETS" | jq -r 'to_entries[] | select( .key | test("^APP_") ) | ( .key | sub("^APP_"; "") ) + "=" + ( .value|@sh )' >> .env
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/vps.key
          chmod 600 ~/.ssh/vps.key
          cat >>~/.ssh/config <<END
          Host vps
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/vps.key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.VPS_HOST }}
          SSH_USER: ${{ secrets.VPS_USERNAME }}
          SSH_KEY: ${{ secrets.VPS_KEY }}
      - name: Clear target upload folder
        run: |
          ssh vps << EOF
            rm -rf ~/$TARGET_DIR.new 
            mkdir ~/$TARGET_DIR.new
          EOF
      - name: Upload everything
        run: scp -r ./. vps:~/$TARGET_DIR.new/
      - name: Rotate deployment folders
        run: |
          ssh vps <<EOF
            rm -rf ~/$TARGET_DIR.old 
            mkdir -p ~/$TARGET_DIR/
            cp -r ~/$TARGET_DIR/. ~/$TARGET_DIR.old
            rm -rf ~/$TARGET_DIR/HabitMuse ~/$TARGET_DIR 
            cp -r ~/$TARGET_DIR.new/. ~/$TARGET_DIR
          EOF
